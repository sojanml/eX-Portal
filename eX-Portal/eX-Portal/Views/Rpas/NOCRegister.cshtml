@model eX_Portal.ViewModel.FlightSetupViewModel

@using eX_Portal.exLogic
@{
//  ViewBag.Title = "Flight Registration";

}

@using (Html.BeginForm(null, null, FormMethod.Get, new { name = "frmDroneSetup", id = "frmDroneSetup" })) {

  @Html.AntiForgeryToken()

  @Html.HiddenFor(model => model.GcaApproval.ApprovalID)
  <section class="top-space">
    <div id="frm" class="column column-half form-horizontal NoBorder" >
      <div class="title">
        NOC Registration
      </div>
      <div class="error" id="error-message" style="display:none; padding-top:10px; margin-bottom:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      </div>
      <div style="padding-top:10px;">
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.DroneID, "RPAS Name")

          @Html.DropDownListFor(model => model.GcaApproval.DroneID, DroneFlightSetup.GetDdListDrone(Convert.ToInt32(Session["AccountID"].ToString())),
        "--Select Registered RPAS--",
        new { @class = "form-control" })
          @Html.ValidationMessageFor(model => model.GcaApproval.DroneID, "", new { @class = "text-danger" })
        </div>
       
      </div>

      <div class="form-group">
        <table style="width:100%;" cellpadding="0" cellspacing="0">
          <tr>
            <td width="49%;">
              Flight Type
            </td>
            <td style="width:2%">&nbsp;</td>
            <td width="49%;">
              For (Client Name)
            </td>

          </tr>
          <tr>
            <td width="49%;">
              @Html.DropDownListFor(model => model.GcaApproval.FlightTypeID, Util.GetDropDowntList("FlightType", "Name", "Code", "usp_Portal_GetDroneDropDown"), new { @class = "form-control" })
              <div id="Other_FlightType" style="display:none;">
                @Html.EditorFor(model => model.FlightType, new { htmlAttributes = new { @class = "form-control" } })
              </div>
            </td>
            <td style="width:2%">&nbsp;</td>
            <td width="49%;">
              @Html.EditorFor(model => model.GcaApproval.ClientName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Client Name" } })
              @Html.ValidationMessageFor(model => model.GcaApproval.ClientName, "", new { @class = "text-danger",  })
            </td>
          </tr>
        </table>
      </div>

      <div id="gcacoordinates" style="display:none; width:100%;">
        <div class="editor-field" style="width:100%;">
          @Html.EditorFor(model => model.GcaApproval.Coordinates)
          @Html.ValidationMessageFor(model => model.GcaApproval.Coordinates)
        </div>
      </div>

      <h2>Flight Details</h2>
      <div class="form-group">
        @Html.LabelFor(model => model.GcaApproval.NotificationEmails, "Post-Flight Report recipient addresses [separated by a comma (,)]")
        <div class="col-md-10">
          @Html.EditorFor(model => model.GcaApproval.NotificationEmails, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.GcaApproval.NotificationEmails, "", new { @class = "text-danger" })
        </div>
      </div>

      <h2>Zone Approval</h2>





      <div class="two-column-form-group">
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.StartDate)
          <div class="col-md-10">
            <input class="form-control date-picker text-box single-line "
                   data-val="true" data-val-date="The field Start Date must be a date."
                   data-val-required="Please Enter Start Date" id="GcaApproval_StartDate"
                   name="GcaApproval.StartDate" type="datetime"
                   value="@(
        Model.GcaApproval.StartDate == null ? "" :
        ((DateTime)(Model.GcaApproval.StartDate)).ToString("dd-MMM-yyyy"))">

            @Html.ValidationMessageFor(model => model.GcaApproval.StartDate, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.EndDate)
          <div class="col-md-10">
            <input class="form-control date-picker text-box single-line"
                   data-val="true" data-val-date="The field End Date must be a date."
                   data-val-required="Please Enter End Date" id="GcaApproval_EndDate"
                   name="GcaApproval.EndDate" type="datetime" value="@(
        Model.GcaApproval.EndDate == null ? "" :
        ((DateTime)(Model.GcaApproval.EndDate)).ToString("dd-MMM-yyyy"))">
            @Html.ValidationMessageFor(model => model.GcaApproval.EndDate, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>
      <div class="two-column-form-group">
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.StartTime)
          <div class="col-md-10">
            @Html.EditorFor(model => model.GcaApproval.StartTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
            @Html.ValidationMessageFor(model => model.GcaApproval.StartTime, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.EndTime)
          <div class="col-md-10">
            @Html.EditorFor(model => model.GcaApproval.EndTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
            @Html.ValidationMessageFor(model => model.GcaApproval.EndTime, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>
      <div class="two-column-form-group">
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.MinAltitude)
          <div class="col-2">
            @Html.EditorFor(model => model.GcaApproval.MinAltitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GcaApproval.MinAltitude, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-group">
          @Html.LabelFor(model => model.GcaApproval.MaxAltitude)
          <div class="col-2">
            @Html.EditorFor(model => model.GcaApproval.MaxAltitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GcaApproval.MaxAltitude, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>





      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input id="submitButton" type="submit" value="Submit" class="btn btn-default" />
        </div>
      </div>

    </div>
    <div id="frm2" class="column column-half">

      <div class="title">
        Location
      </div>

      <div id="polygonmap" class="form-group" style="visibility:visible;height:500px;width:auto;">
        <div id="map_canvas" style="width: 100%; height: 100%;"></div>
      </div>

    </div>
  </section>
}

@section header{
  <link href="~/Content/black-box.css" rel="stylesheet" />
  <link href="~/jquery-ui/jquery-ui.css" rel="stylesheet" />
  <link href="~/jquery-ui/jquery.ui.timepicker.css" rel="stylesheet" />
}

@section Scripts {
  <script src="~/jquery-ui/jquery-ui.js"></script>
  <script src="~/jquery-ui/jquery.ui.timepicker.js"></script>
  <script type="text/javascript" src="//maps.google.com/maps/api/js?key=AIzaSyD_zdKS2syz3Jqr8F_jZRLsJj0u73-lfog"></script>
  <script src="~/Scripts/ADSB-Map.js"></script>
  <script src="~/Scripts/NOC_RPAS.js"></script>

}

