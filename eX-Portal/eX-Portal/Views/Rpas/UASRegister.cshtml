@model eX_Portal.Models.MSTR_Drone
@using eX_Portal.exLogic
@{ 
    ViewBag.Title = "RPAS UAS Registration";
}
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    if (ViewBag.UserExist == true)
    {
        @Html.Action("UserDetailView", "User", new { ID = ViewBag.UserID })
    }

    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.RefName, "Reference Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeID, "Make", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MakeID, Util.GetDropDowntList("Make", "Name", "Code", "usp_Portal_GetDroneDropDown",true), "--Select Make--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MakeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divMakeDetails" style="display:none;">
            @Html.LabelFor(model => model.MakeOther, "Other", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MakeOther, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MakeOther, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModelID, "Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ModelID, Util.GetDropDowntList("Model", "Name", "Code", "usp_Portal_GetDroneDropDown",true), "--Select Model--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="divModelDetails" style="display:none;">
            @Html.LabelFor(model => model.ModelName, "Other", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">
            @Html.LabelFor(model => model.ManufactureId,"Manufacturer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ManufactureId, Util.GetDropDowntList("Manufacturer", "Name", "Code", "usp_Portal_GetDroneDropDown",true),"--Select Manufacturer--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufactureId, "", new { @class = "text-danger" })
            </div>
        </div>     
        <div class="form-group" id="divManuDetails" style="display:none;">
            @Html.LabelFor(model => model.ManufactureOther, "Other", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManufactureOther, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufactureOther, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, Util.GetDropDowntList("Type", "Name", "Code", "usp_Portal_GetDroneDropDown"), "--Select Type--", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.MaxAllupWeight, "Max All up weight", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxAllupWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxAllupWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.color, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RpasSerialNo, "RPAS Serial Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RpasSerialNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RpasSerialNo, "", new { @class = "text-danger" })
            </div>
        </div>   
      

        <div class="form-group">
        @Html.LabelFor(model => model.IsCamara, "Is Camera", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IsCamara,Util.GetBoolList(true), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsCamara, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="divCamaraDetails" style="display:none;">
        @Html.LabelFor(model => model.CameraDetails, "Details", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CameraDetails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CameraDetails, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="toolbar" style="text-align:right">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="button" />
            </div>
        </div>

    </div>
}
<script src="~/Scripts/UAScreation.js"></script>
@section scripts{
@Scripts.Render("~/bundles/jqueryval")
}
