
@model eX_Portal.Models.GCA_Approval
@using eX_Portal.exLogic;
@{
    ViewBag.Title = "Fight Registration Details";
}


<h2>Requested By</h2>
@Html.Action("UserDetailView", "User", new { ID = Model.PilotUserId })

<h2>RPAS Details</h2>
@Html.Action("DroneDetail", "Drone", new { ID = Model.DroneID })


<h2>Application</h2>
<table class="qDetailView">
    <tr>
        <td>@Html.DisplayNameFor(model => model.ApprovalName): <span class="value">@Html.DisplayFor(model => model.ApprovalName)</span></td>
        <td>Start Date: <span class="value">@Html.DisplayFor(model => model.StartDate)</span></td>
        <td>Start Time: <span class="value">@Html.DisplayFor(model => model.StartTime)</span></td>
    </tr>
    <tr>
        <td>&nbsp;</td>
        <td>End Date    : <span class="value">@Html.DisplayFor(model => model.EndDate, "ShortDateTime")</span></td>
        <td>End Time    : <span class="value">@Html.DisplayFor(model => model.EndTime)</span></td>
    </tr>
    <tr>
        @if(Model.IsUseCamara==1)
        {
             <td>Camara Being Used:Yes </td>
        }
        else
        {
            <td>Camara Being Used:No </td>
        }


    </tr>
</table>
<div id="map_canvas" style="width: 100%; height: 450px"></div>

<br />




@Scripts.Render("~/bundles/jqueryval")
@section scripts {
   <script type="text/javascript" src="//maps.google.com/maps/api/js?key=AIzaSyD_zdKS2syz3Jqr8F_jZRLsJj0u73-lfog"></script>

    <script type="text/javascript">
                var map = null;
                var MapBounds = new google.maps.LatLngBounds();
                $(document).ready(function () {
                    initialize();
                });

                function initialize() {
                    // map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions)
                    var myLatLng = { lat: 25, lng: 55 };

                    var mapDiv = document.getElementById('map_canvas');
                    map = new google.maps.Map(mapDiv, {
                        center: myLatLng,
                        zoom: 10
                    });


                    var BoxCord = setBoundary(getCoordinates());
                    // Construct the polygon.
                    BoundaryBox = new google.maps.Polygon({
                        paths: BoxCord,
                        strokeColor: '#FF0000',
                        strokeOpacity: 0.7,
                        strokeWeight: 1,
                        fillColor: '#FF0000',
                        fillOpacity: 0.1,
                        editable: false,
                        draggable: false
                    });
                    BoundaryBox.setMap(map);
                    map.fitBounds(MapBounds);
                };



                function setBoundary(Cordinates) {
                    var Bounds = [];
                    var LatLng = Cordinates.split(',');
                    for (var i = 0; i < LatLng.length; i++) {
                        var Bound = LatLng[i].split(" ");
                        var Point = new google.maps.LatLng(parseFloat(Bound[0]), parseFloat(Bound[1]));
                        //{ lat: parseFloat(Bound[0]), lng: parseFloat(Bound[1]) };
                        MapBounds.extend(Point);
                        Bounds.push(Point);
                    }
                    return Bounds;
                }

                function getCoordinates() {
                    var Cordinates = "@Model.Coordinates";
                    return Cordinates;
                }


    </script>
}
