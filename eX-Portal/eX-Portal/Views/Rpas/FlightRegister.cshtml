@model eX_Portal.ViewModel.FlightSetupViewModel

@using eX_Portal.exLogic
@{
  //  ViewBag.Title = "Flight Registration";
   
}

@using (Html.BeginForm(null, null, FormMethod.Get, new { name = "frmDroneSetup", id = "frmDroneSetup" }))
{

    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.GcaApproval.ApprovalID)
    <section class="top-space">
    <div id="frm" class="column column-half form-group">
        <div class="title">
            Flight Registration
        </div>
        <div class="error" id="error-message" style="display:none;margin-bottom:20px;"></div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.DroneID, "RPAS Name")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.DroneID, DroneFlightSetup.GetDdListDrone(Convert.ToInt32(Session["AccountID"].ToString())),
        "--Select Drone--",
        new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.DroneID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.PilotUserId, "Pilot")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.PilotUserId, DroneFlightSetup.getPilotAllUsers(Session["AccountID"]),
         "--Select Pilot--",
          new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.PilotUserId, "", new { @class = "text-danger" })
            </div>
            @if (Util.CheckUserIsPilot(Int32.Parse(Session["UserID"].ToString())))
            {

                <div>
                    <input id="ispilot" value="1" name="ispilot" type="checkbox" />
                    <label for="ispilot">I am the pilot</label>
                </div>

            }

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.GroundStaffUserId, "Ground Staff")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.GroundStaffUserId,
          DroneFlightSetup.getPilotAllUsers(Session["AccountID"]),
          "--Select Ground Staff--",
          new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.GroundStaffUserId, "", new { @class = "text-danger" })
            </div>

            @if (Util.CheckUserIsPilot(Int32.Parse(Session["UserID"].ToString())))
            {
                <div>
                    <input id="isgroundstaff" name="isgroundstaff" type="checkbox" />
                    <label for="isgroundstaff">I am the ground staff</label>
                </div>
            }
        </div>

        <h2>Flight Details</h2>
        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.NotificationEmails, "Post-Flight Report recipient addresses [separated by a comma (,)]")
            <div class="col-md-10">
                @Html.EditorFor(model => model.GcaApproval.NotificationEmails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GcaApproval.NotificationEmails, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Zone Approval</h2>

        @*<div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.ApprovalID, "Regulatory Approvals")
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GcaApproval.ApprovalID, new SelectList(Enumerable.Empty<SelectListItem>(), "ApprovalID", "ApprovalName"), "--Select Regulator Approval--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GcaApproval.ApprovalID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div id="newgcaapproval" class="form-group" style="visibility:visible;">
            @Html.LabelFor(model => model.GcaApproval.ApprovalName, "New Regulator Approval Name")
            <div class="editor-field">
                @Html.EditorFor(model => model.GcaApproval.ApprovalName)
                @Html.ValidationMessageFor(model => model.GcaApproval.ApprovalName)
            </div>
        </div>

        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.StartDate)
                <div class="col-md-10">
                    <input class="form-control date-picker text-box single-line "
                           data-val="true" data-val-date="The field Start Date must be a date."
                           data-val-required="Please Enter Start Date" id="GcaApproval_StartDate"
                           name="GcaApproval.StartDate" type="datetime"
                           value="@(
        Model.GcaApproval.StartDate == null ? "" :
        ((DateTime)(Model.GcaApproval.StartDate)).ToString("dd-MMM-yyyy"))">

                    @Html.ValidationMessageFor(model => model.GcaApproval.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.EndDate)
                <div class="col-md-10">
                    <input class="form-control date-picker text-box single-line"
                           data-val="true" data-val-date="The field End Date must be a date."
                           data-val-required="Please Enter End Date" id="GcaApproval_EndDate"
                           name="GcaApproval.EndDate" type="datetime" value="@(
        Model.GcaApproval.EndDate == null ? "" :
        ((DateTime)(Model.GcaApproval.EndDate)).ToString("dd-MMM-yyyy"))">
                    @Html.ValidationMessageFor(model => model.GcaApproval.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.StartTime)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.StartTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.EndTime)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.EndTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.MinAltitude)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.MinAltitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.MinAltitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.MaxAltitude)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.MaxAltitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.MaxAltitude, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.IsUseCamara, "Camera being used")

                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GcaApproval.IsUseCamara, Util.GetBoolList(true))
                    @Html.ValidationMessageFor(model => model.GcaApproval.IsUseCamara)
                </div>
            </div>
            
        </div>

        <div id="cameraopt" style="text-align:left;display:none;padding:0px;">
            <div class="form-group">
                @*@Html.LabelFor(model => model.GcaApproval.CameraId, "Select Camera")*@
                <div class="col-md-10">
                    Other Camera
                    @Html.DropDownListFor(model => model.GcaApproval.CameraId, Util.GetDropDowntList("Camera", "Name", "Code", "usp_Portal_GetDroneDropDown"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GcaApproval.CameraId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="othercamera" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.camera, "Other Camera")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.camera, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.camera, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Save" class="btn btn-default" style="width:60px;" />
            </div>
        </div>

    </div>
    <div id="frm2" class="column column-half form-group">
        <div class="title">
            Coordinates
        </div>
        <div id="gcacoordinates" style="visibility:visible;width:100%;">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.Coordinates, "Coordinates")
                <div class="editor-field" style="width:100%;">
                    @Html.EditorFor(model => model.GcaApproval.Coordinates)
                    @Html.ValidationMessageFor(model => model.GcaApproval.Coordinates)
                </div>
            </div>

        </div>

        <div id="polygonmap" class="form-group" style="visibility:visible;height:500px;width:auto;">
            <div id="map_canvas" style="width: 100%; height: 100%;border:1px solid black;"></div>
        </div>

    </div>
    </section>
    }


    @section header{
        <link href="~/Content/black-box.css" rel="stylesheet" />
        <link href="~/jquery-ui/jquery-ui.css" rel="stylesheet" />
        <link href="~/jquery-ui/jquery.ui.timepicker.css" rel="stylesheet" />
    }

    @section Scripts {
        <script src="~/jquery-ui/jquery-ui.js"></script>
        <script src="~/jquery-ui/jquery.ui.timepicker.js"></script>
        <script type="text/javascript" src="//maps.google.com/maps/api/js?key=AIzaSyD_zdKS2syz3Jqr8F_jZRLsJj0u73-lfog"></script>
        <script src="~/Scripts/RpasFlightSetup.js"></script>
    }

