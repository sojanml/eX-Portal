@model eX_Portal.Models.GCA_Approval
@using eX_Portal.exLogic
@{
  ViewBag.Title = "Flight Register";
}


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RegisterForm", name= "RegisterForm" })) {
<section class="general-form" id="loginForm">

  <input type="hidden" name="ApprovalID" value="@Model.ApprovalID" />
  <div class="editor-label">
    Select the Drone for Uploading the document
  </div>
  <div class="editor-field">
    @Html.DropDownListFor(model => model.DroneID, Util.GetRAPSDroneList())
    @Html.ValidationMessageFor(model => model.DroneID)
  </div>
  <div class="editor-label">
    @Html.LabelFor(model => model.ApprovalName)
  </div>
  <div class="editor-field">
    @Html.EditorFor(model => model.ApprovalName)
    @Html.ValidationMessageFor(model => model.ApprovalName)
  </div>
  <div class="editor-label">
    <input class="button" style="float:right; margin-bottom:5px;" type="button" id="btnCoordinates" name="btnCoordinates" value="Show Map" />
    @Html.LabelFor(model => model.Coordinates, "Coordinates")
  </div>

  <div class="editor-field">
    @Html.EditorFor(model => model.Coordinates)
    @Html.ValidationMessageFor(model => model.Coordinates)
  </div>

  <div class="editor-label">
    @Html.LabelFor(model => model.StartDate)
  </div>
  <div class="editor-field">

    @Html.TextBoxFor(model => model.StartDate, new { @class = "date-picker" })
    @Html.ValidationMessageFor(model => model.StartDate)
  </div>
  <div class="editor-label">
    @Html.LabelFor(model => model.EndDate)
  </div>
  <div class="editor-field">
    @Html.TextBoxFor(model => model.EndDate, new { @class = "date-picker" })
    @Html.ValidationMessageFor(model => model.EndDate)
  </div>
  <div class="editor-label">
    @Html.LabelFor(model => model.StartTime)
  </div>
  <div class="editor-field">
    @Html.TextBoxFor(model => model.StartTime, new { @class = "time-picker" })
    @Html.ValidationMessageFor(model => model.StartTime)
  </div>
  <div class="editor-label">
    @Html.LabelFor(model => model.EndTime)
  </div>
  <div class="editor-field">
    @Html.TextBoxFor(model => model.EndTime, new { @class = "time-picker" })
    @Html.ValidationMessageFor(model => model.EndTime)
  </div>

  <div class="editor-label">
    @Html.LabelFor(model => model.MinAltitude, "Minimum Altitude in meter")
  </div>
  <div class="editor-field">
    @Html.EditorFor(model => model.MinAltitude)
    @Html.ValidationMessageFor(model => model.MinAltitude)
  </div>
  <div class="editor-label">
    @Html.LabelFor(model => model.MaxAltitude, "Maximum Altitude in mmeter[ max allowed : 50m ]")
  </div>
  <div class="editor-field">
    @Html.EditorFor(model => model.MaxAltitude)
    @Html.ValidationMessageFor(model => model.MaxAltitude)
  </div>

  <div class="editor-label">
    @Html.LabelFor(model => model.ApprovalRemarks, "Remarks")
  </div>
  <div class="editor-field">
    @Html.EditorFor(model => model.ApprovalRemarks)
    @Html.ValidationMessageFor(model => model.ApprovalRemarks)
  </div>

  <div class="editor-label">
    @Html.LabelFor(model => model.IsUseCamara, "Is using camara")
  </div>
  <div class="editor-field">
    @Html.DropDownListFor(model => model.IsUseCamara, Util.GetBoolList())
    @Html.ValidationMessageFor(model => model.IsUseCamara)
  </div>

  <div id="UploadInfo" style="display:@(Model.IsUseCamara == 1 ? "block" : "none")">
    <div class="editor-label">
      @Html.LabelFor(model => model.ApprovalFileUrl, "MOD Approval Document")
    </div>
    <div class="editor-field" id="file-input">
      <input type="hidden" name="MOD_ApprovalURL" id="MOD_ApprovalURL" value="@Model.MOD_ApprovalURL" />
      <input id="S3UploadFile" name="file" type="file" />
      <span style="display:none" class="field-validation-error" id="ApprovalFileUrl-msg">Please upload the MOD Approval file</span>

    </div>
    <div class="editor-field" id="file-info">
      <span id="file-info-name">@Model.MOD_ApprovalURL</span><span id="file-info-status"></span>
    </div>
  </div>

  <div class="form-toolbar">
    <input type="submit" id="btn-submit" value="Save" />
  </div>
</section>
}

<form id="formS3" name="formS3" action="@ViewBag.FormAction" method="@ViewBag.FormMethod" enctype="@ViewBag.FormEnclosureType">
  <input type="hidden" name="key" value="@ViewBag.FileId" />
  <input type="hidden" name="AWSAccessKeyId" value="@ViewBag.AWSAccessKey" />
  <input type="hidden" name="acl" value="@ViewBag.Acl" />
  <input type="hidden" name="policy" value="@ViewBag.Base64EncodedPolicy" />
  <input type="hidden" name="signature" value="@ViewBag.Signature" />
  <input type="hidden" name="redirect" value="@ViewBag.RedirectUrl" />
</form>

<div id="map-dialog" style="display:none;" title="Select Cordinates for the Approval">
  <iframe id="iFrameMap" name="iFrameMap" src="/Map/Select" style="width:100%; height:100%; border:0px"></iframe>
</div>


@section header{
  <link href="~/Content/black-box.css" rel="stylesheet" />
  <link href="~/jquery-ui/jquery.ui.timepicker.css" rel="stylesheet" />
}

@section scripts {
  @Scripts.Render("~/bundles/jqueryval")
  <script src="~/jquery-ui/jquery.ui.timepicker.js"></script>
  <script src="~/Scripts/flightCreation.js"></script>
}
