@model eX_Portal.ViewModel.FlightSetupViewModel

@using eX_Portal.exLogic
@{
    ViewBag.Title = "Flight Registration";
   
}
@using (Html.BeginForm(null, null, FormMethod.Get, new { name = "frmDroneSetup", id = "frmDroneSetup" }))
{

    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.GcaApproval.ApprovalID)
    <div id="frm" class="form-horizontal">
        <div class="error" id="error-message" style="display:none;margin-bottom:20px;"></div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.DroneID, "UAS Name")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.DroneID, DroneFlightSetup.GetDdListDrone(Convert.ToInt32(Session["AccountID"].ToString())),
        "--Select Drone--",
        new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.DroneID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.PilotUserId, "Pilot")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.PilotUserId, DroneFlightSetup.getAllUsers(Session["AccountID"]),
         "--Select Pilot--",
          new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.PilotUserId, "", new { @class = "text-danger" })
            </div>
            <div>
                <input id="ispilot" value="1" name="ispilot" type="checkbox" />
                <label for="ispilot">I am the pilot</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.GroundStaffUserId, "Ground Staff")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.GroundStaffUserId,
          DroneFlightSetup.getAllUsers(Session["AccountID"]),
          "--Select Ground Staff--",
          new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.GroundStaffUserId, "", new { @class = "text-danger" })
            </div>
            <div>
                <input id="isgroundstaff" name="isgroundstaff" type="checkbox" />
                <label for="isgroundstaff">I am the ground staff</label>
            </div>
        </div>

        <h2>Flight Details</h2>
        <div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.NotificationEmails, "Post-Flight Report recipient addresses [separated by a comma (,)]")
            <div class="col-md-10">
                @Html.EditorFor(model => model.GcaApproval.NotificationEmails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GcaApproval.NotificationEmails, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Zone Approval</h2>

        @*<div class="form-group">
            @Html.LabelFor(model => model.GcaApproval.ApprovalID, "Regulatory Approvals")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GcaApproval.ApprovalID, new SelectList(Enumerable.Empty<SelectListItem>(), "ApprovalID", "ApprovalName"), "--Select Regulator Approval--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GcaApproval.ApprovalID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div id="newgcaapproval" class="form-group" style="visibility:visible;">
            @Html.LabelFor(model => model.GcaApproval.ApprovalName, "New Regulator Approval Name")
            <div class="editor-field">
                @Html.EditorFor(model => model.GcaApproval.ApprovalName)
                @Html.ValidationMessageFor(model => model.GcaApproval.ApprovalName)
            </div>
        </div>

        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.StartDate)
                <div class="col-md-10">                
                       
                  
                        @Html.EditorFor(model => model.GcaApproval.StartDate, "{0:dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control date-picker" } })
                     
                  
                   
                    @Html.ValidationMessageFor(model => model.GcaApproval.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.EndDate)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.EndDate, "{0:dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.StartTime)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.StartTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.EndTime)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.EndTime, new { htmlAttributes = new { @class = "form-control time-picker" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.MinAltitude)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.MinAltitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.MinAltitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.MaxAltitude)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GcaApproval.MaxAltitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GcaApproval.MaxAltitude, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="two-column-form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.GcaApproval.IsUseCamara, "Camera being used")

                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GcaApproval.IsUseCamara, Util.GetBoolList(true))
                    @Html.ValidationMessageFor(model => model.GcaApproval.IsUseCamara)
                </div>
            </div>


            <div class="form-group">               
                <div class="col-md-10">
                   <p><font color="white">p</font></p>
                </div>
            </div>
           </div>
      
            <div id="gcacoordinates" class="form-group" style="visibility:visible;">
                @Html.LabelFor(model => model.GcaApproval.Coordinates, "Coordinates")
                <div class="editor-field">
                    @Html.EditorFor(model => model.GcaApproval.Coordinates)
                    @Html.ValidationMessageFor(model => model.GcaApproval.Coordinates)
                </div>
            </div>

           

            <div id="polygonmap" class="form-group" style="visibility:visible;height:500px;width:600px;">
                <div id="map_canvas" style="width: 100%; height: 100%;border:1px solid black;"></div>
            </div>





            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submitButton" type="submit" value="Save" class="btn btn-default" style="width:60px;" />
                </div>
            </div>

        </div>
}


@section header{
    <link href="~/Content/black-box.css" rel="stylesheet" />
    <link href="~/jquery-ui/jquery-ui.css" rel="stylesheet" />
    <link href="~/jquery-ui/jquery.ui.timepicker.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/jquery-ui/jquery-ui.js"></script>
    <script src="~/jquery-ui/jquery.ui.timepicker.js"></script>
    <script type="text/javascript" src="//maps.google.com/maps/api/js?key=AIzaSyD_zdKS2syz3Jqr8F_jZRLsJj0u73-lfog"></script>
    <script src="~/Scripts/RpasFlightSetup.js"></script>
}

