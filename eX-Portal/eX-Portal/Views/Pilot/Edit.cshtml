

@model eX_Portal.ViewModel.UserViewModel
@{
    ViewBag.Title = "Modify Pilot Information";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
  <div class="form-horizontal">




    @Html.HiddenFor(model => model.User.UserId)
    @Html.HiddenFor(model => model.User.UserName)
    @Html.HiddenFor(model => model.User.PhotoUrl)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table style="width:100%;" cellpadding="0" cellspacing="0">
      <tr>
        <td style="width:100%; padding-right:30px;">

          <div class="form-group">
            @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.User.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.User.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.User.MiddleName, "", new { @class = "text-danger" })
            </div>
          </div>
          <div class="form-group">
            @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
            </div>
          </div>



          <div class="form-group">
            @Html.LabelFor(model => model.User.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.User.EmailId, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.User.EmailId, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.User.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.User.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
              @Html.ValidationMessageFor(model => model.User.MobileNo, "", new { @class = "text-danger" })
            </div>
          </div>

        </td>
        <td valign="top">
          <div class="photo-upload">
            <div class="user-photo">
              <img id="img-user-photo" src="~/Upload/User/@(!String.IsNullOrEmpty(Model.User.PhotoUrl) ? Model.User.UserId + "/" + Model.User.PhotoUrl : "none.png")" />
            </div>
            <div style="display:none" id="photo-upload-msg"></div>
            <div class="upload-btn">
              <a onclick="return false;" href="#" class="button">Upload Photo</a>
              <input type="file" name="fileinput" id="fileinput" />
            </div>
          </div>



        </td>
      </tr>
    </table>





    <div class="form-group">
      @Html.LabelFor(model => model.User.OfficeNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.OfficeNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.OfficeNo, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.HomeNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.HomeNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.HomeNo, "", new { @class = "text-danger" })
      </div>
    </div>



    @*<div class="form-group">
          @Html.LabelFor(model => model.User.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              @Html.DropDownListFor(model => model.User.AccountId, Model.AccountList)
              @Html.ValidationMessageFor(model => model.User.AccountId, "", new { @class = "text-danger" })
          </div>
      </div>


      <div class="form-group">
          @Html.LabelFor(model => model.User.UserProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              @Html.DropDownListFor(model => model.User.UserProfileId, Model.ProfileList)
              @Html.ValidationMessageFor(model => model.User.UserProfileId, "", new { @class = "text-danger" })
          </div>
      </div>*@


    <div class="form-group">
      @Html.LabelFor(model => model.User.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.User.CountryId, Model.CountryList)
        @Html.ValidationMessageFor(model => model.User.CountryId, "", new { @class = "text-danger" })
      </div>
    </div>
    @*<div class="form-group">
          @Html.LabelFor(model => model.User.Dashboard, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              @Html.DropDownListFor(model => model.User.Dashboard, Model.DashboardList)
              @Html.ValidationMessageFor(model => model.User.Dashboard, "", new { @class = "text-danger" })
          </div>
      </div>
      <div class="form-group">
          @Html.LabelFor(model => model.User.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              <div class="checkbox">
                  @Html.EditorFor(model => model.User.IsActive)
                  @Html.ValidationMessageFor(model => model.User.IsActive, "", new { @class = "text-danger" })
              </div>
          </div>
      </div>*@

    @*<div class="form-group">
          @Html.LabelFor(model => model.User.IsPilot, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">

              @Html.ValidationMessageFor(model => model.User.IsPilot, "", new { @class = "text-danger" })
          </div>
      </div>*@
    @Html.HiddenFor(model => model.User.IsPilot, new { Value = true })
    @Html.HiddenFor(model => model.User.UserProfileId)
    @Html.HiddenFor(model => model.User.AccountId)
    @Html.HiddenFor(model => model.User.IsActive)
    <div class="form-group">
      @Html.LabelFor(model => model.User.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.Remarks, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.Remarks, "", new { @class = "text-danger" })
      </div>
    </div>


    <div class="form-group">
      @Html.LabelFor(model => model.Pilot.EmiratesId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Pilot.EmiratesId, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
        @Html.ValidationMessageFor(model => model.Pilot.EmiratesId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Pilot.PassportNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Pilot.PassportNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
        @Html.ValidationMessageFor(model => model.Pilot.PassportNo, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Pilot.DateOfExpiry, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        <input class="date-picker text-box single-line" data-val="true"
               data-val-date="The field Date Of Expiry must be a date."
               id="Pilot_DateOfExpiry" name="Pilot.DateOfExpiry" type="datetime"
               value="@(Model.Pilot.DateOfExpiry == null ? "" :
                                                     ((DateTime)(Model.Pilot.DateOfExpiry)).ToString("dd-MMM-yyyy"))">
        @Html.ValidationMessageFor(model => model.Pilot.DateOfExpiry, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Pilot.Department, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Pilot.Department, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
        @Html.ValidationMessageFor(model => model.Pilot.Department, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Pilot.Title, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Pilot.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Pilot.Title, "", new { @class = "text-danger" })
      </div>
    </div>


    <div class="form-group">
      @Html.LabelFor(model => model.User.RPASPermitNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.RPASPermitNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.RPASPermitNo, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.User.PermitCategory, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.User.PermitCategory, Model.PermitCategoryList)
        @Html.ValidationMessageFor(model => model.User.PermitCategory, "", new { @class = "text-danger" })
      </div>
    </div>
      <div class="form-group">
          @Html.LabelFor(model => model.User.DOI_RPASPermit,"Permit Issue Date", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              <input class="date-picker text-box single-line" data-val="true"
                     data-val-date="The field Date Of Expiry must be a date."
                     id="Pilot_DOI_RPASPermit" name="User.DOI_RPASPermit" type="datetime"
                     value="@(Model.User.DOI_RPASPermit == null ? "" :
                                                     ((DateTime)(Model.User.DOI_RPASPermit)).ToString("dd-MMM-yyyy"))">
              @Html.ValidationMessageFor(model => model.User.DOI_RPASPermit, "", new { @class = "text-danger" })
         
          </div>
      </div>
      <div class="form-group">
          @Html.LabelFor(model => model.User.DOE_RPASPermit, "Permit Expiry Date", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
              <input class="date-picker text-box single-line" data-val="true"
                     data-val-date="The field Date Of Expiry must be a date."
                     id="Pilot_DOE_RPASPermit" name="User.DOE_RPASPermit" type="datetime"
                     value="@(Model.User.DOE_RPASPermit == null ? "" :
                                                     ((DateTime)(Model.User.DOE_RPASPermit)).ToString("dd-MMM-yyyy"))">
              @Html.ValidationMessageFor(model => model.User.DOE_RPASPermit, "", new { @class = "text-danger" })

          </div>
      </div>

    <div class="form-toolbar">
      <input type="submit" value="Update" />
    </div>

  </div>

    


   
}


@section Scripts {
    <script type="text/javascript">
    var PhotoUploadURL = '@Url.Action("UploadFile", new { ID = Model.User.UserId})';
    </script>
    <script type="text/javascript" src="~/Scripts/user.js"></script>
}
