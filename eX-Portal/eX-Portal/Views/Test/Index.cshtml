@model eX_Portal.exLogic.GeoGrid
@section toolbar {
<a href="#" id="get-boundary">Boundary</a>
}
  <div id="cord"></div>  
  <div id="map_canvas" style="width: 100%; height: 480px;"></div>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  
@section scripts {
  <script type="text/javascript">
    var GenInfo = [@Html.Raw(Model.getDistance("20160229102940"))];
    var InfoWindow = null;
    var BoundaryBox= null;

    var map = null;
    $(document).ready(function () {
      initialize();
      DrawLines();
    });

    function initialize() {
      // map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

      var TheInfo = @Html.Raw(Model.getBox());
      var myLatLng =  {lat: GenInfo[0]["RowPointLat"], lng: GenInfo[0]["RowPointLon"]};
      var mapDiv = document.getElementById('map_canvas');
      map = new google.maps.Map(mapDiv, {
        center: myLatLng,
        zoom: 18
      });

      var triangleCoords = [
        {lat: TheInfo["TopLeftLat"], lng: TheInfo["TopLeftLon"]},
        {lat: TheInfo["TopRightLat"], lng: TheInfo["TopRightLon"]},
        {lat: TheInfo["BottomRightLat"], lng: TheInfo["BottomRightLon"]},
        {lat: TheInfo["BottomLeftLat"], lng: TheInfo["BottomLeftLon"]}
      ];
      // Construct the polygon.
      BoundaryBox = new google.maps.Polygon({
        paths: triangleCoords,
        strokeColor: '#FF0000',
        strokeOpacity: 0.7,
        strokeWeight: 1,
        fillColor: '#FF0000',
        fillOpacity: 0.1,
        editable: true,
        draggable: true
      });
      BoundaryBox.setMap(map);
      
      $('#get-boundary').on("click", function(e){
        getBoundary();
      });

    };

    var InfoWindows = [];

    function DrawLines() {
      for(var i = 0; i < GenInfo.length; i++) {
        var Item = GenInfo[i];
        var theLine = [
          {lat: Item["ColPointLat"], lng:  Item["ColPointLon"]},
          {lat:  Item["Latitude"], lng:  Item["Longitude"]},
          {lat: Item["RowPointLat"], lng:  Item["RowPointLon"]}
        ];
        var flightPath = new google.maps.Polyline({
          path: theLine,
          geodesic: true,
          strokeColor: getRandomColor(),
          strokeOpacity: 1.0,
          strokeWeight: 2
        });

        flightPath.setMap(map);


        var marker = new google.maps.Marker({
          position:  {lat:  Item["Latitude"], lng:  Item["Longitude"]},
          map: map          
        });
        var body = 'Row: <b>' + Item["RowNumber"] + "</b>,  Col: <b>" + Item["ColumnNumber"] + '</b><br>\n' +
          'Row Distance: <font color="green">' + Item["RowDistance"] + '</font><br>\n'+
          'ColDistance: <font color="green">' + Item["ColDistance"] + '</font>';
        addInfo(marker, body);


      }

    }

    function addInfo(marker, body) {
    
      var thisInfo = new google.maps.InfoWindow({
        content: body 
      });

      marker.addListener('click', function() {
        thisInfo.open(map, marker);
      });
    }

    function getRandomColor() {
      var letters = '0123456789ABCDEF'.split('');
      var color = '#';
      for (var i = 0; i < 6; i++ ) {
        color += letters[Math.floor(Math.random() * 16)];
      }
      return color;
    }



    function getBoundary() {
      var Bounds = BoundaryBox.getPath().getArray();
      var LatLng = '';
      for (var i = 0; i < Bounds.length; i++) {
        if (LatLng != '') LatLng += ',';
        LatLng = LatLng + Bounds[i].lat() + ' ' + Bounds[i].lng()
      }
      $('#cord').html(LatLng);
      return LatLng;
      
    }

  </script>
}
