<div id="cord"></div>
<div id="map_canvas" style="width: 100%; height: 480px;"></div>

<table id="qViewTable" class="report">
  <thead>
    <tr>
      <th><input type="checkbox" checked class="point_all" name="" /></th>
      <th>RFID</th>
      <th>Base Lat</th>
      <th>Base Lon</th>
      <th>Compare Lat</th>
      <th>Compare Lon</th>
      <th>Distance (M)</th>
    </tr>
  </thead>
  <tfoot id="DataRows">
  </tfoot>
</table>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

@section scripts {
  <script type="text/javascript">
    var map = null;
    var Circles = new Object();
    var Lines = new Object();
    var GeoData = [
      @Html.Raw(ViewBag.Json)
    ]
    $(document).ready(function () {
      initialize();
      drawGrids();

      $('.point_all').on("change", function (e) {
        var obj = $(this);
        if (obj.is(':checked')) {
          $('.point').prop('checked', true);
        } else {
          $('.point').prop('checked', false);
        }
        $('.point').trigger("change");
      });

      $('.point').on("change", function (e) {
        var obj = $(this);
        var id = parseInt(obj.attr("data-value"), 0);
        if (!Circles[id]) return;
        if (obj.is(':checked')) {
          Circles[id].setMap(map);
          Lines[id].setMap(map);
        } else {
          Circles[id].setMap(null);
          Lines[id].setMap(null);
        }
      });

    });

    function initialize() {
      // map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

      var myLatLng = { lat: GeoData[0]['bLat'], lng: GeoData[0]['bLon'] };
      var mapDiv = document.getElementById('map_canvas');
      map = new google.maps.Map(mapDiv, {
        center: myLatLng,
        zoom: 18
      });

    };



    function drawGrids() {
      var Cords = [

      ];
      for (var i = 0; i < GeoData.length; i++) {
        var BasePoint = { lat: GeoData[i]["bLat"], lng: GeoData[i]["bLon"] };
        var EndPoint = { lat: GeoData[i]["cLat"], lng: GeoData[i]["cLon"] };

        var Color = getRandomColor();
        var Distance = getDistance(BasePoint, EndPoint);

        if (GeoData[i]["cLat"] == 0 && GeoData[i]["cLon"] == 0) {

        } else {

          Circles[i] = new google.maps.Circle({
            map: map,
            radius: Distance,
            center: BasePoint,
            fillColor: Color,
            fillOpacity: 0.5,
            strokeColor: Color,
            strokeOpacity: 0.8,
            strokeWeight: 0
          });

          var lineCoordinates = [BasePoint, EndPoint];
          Lines[i] = new google.maps.Polyline({
            path: lineCoordinates,
            geodesic: true,
            strokeColor: '#000000',
            strokeOpacity: 1,
            strokeWeight: 1
          });
          Lines[i].setMap(map);
        }
        var Row = $('<tr>' +
        '<td><input class="point" data-value="' + i + '" checked type="checkbox" name="check_' + i + '"></td>\n' +
        '<td>' + GeoData[i]["RFID"] + '</td>\n' +
        '<td>' + GeoData[i]["bLat"] + '</td>\n' +
        '<td>' + GeoData[i]["bLon"] + '</td>\n' +
        '<td>' + GeoData[i]["cLat"] + '</td>\n' +
        '<td>' + GeoData[i]["cLon"] + '</td>\n' +
        '<td>' + (Math.round(Distance * 1000)/1000) + '</td>\n' +
        '</tr>'
        );
        $('#DataRows').append(Row);
      }
    }

    function getRandomColor() {
      var letters = '0123456789ABCDEF'.split('');
      var color = '#';
      for (var i = 0; i < 6; i++ ) {
        color += letters[Math.floor(Math.random() * 16)];
      }
      return color;
    }


    var rad = function (x) {
      return x * Math.PI / 180;
    };

    var getDistance = function (p1, p2) {
      var R = 6378137; // Earth’s mean radius in meter
      var dLat = rad(p2.lat - p1.lat);
      var dLong = rad(p2.lng - p1.lng);
      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(rad(p1.lat)) * Math.cos(rad(p2.lat)) *
        Math.sin(dLong / 2) * Math.sin(dLong / 2);
      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      var d = R * c;
      return d; // returns the distance in meter
    };

  </script>
}
