

@model eX_Portal.ViewModel.UserViewModel.LoginViewModel.UserLogon
@{
    ViewBag.Title = "User Edit";
    Layout = "~/Views/Shared/_exPortal.cshtml";
}

<section class="general-form">
    @using (Html.BeginForm())
    {



        @Html.HiddenFor(model => model.User.UserId)



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="editor-field">
            @Html.LabelFor(model => model.User.UserName)
            <div class="editor-field">
                @Html.EditorFor(model => model.User.UserName)
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="editor-field">
            @Html.LabelFor(model => model.User.Password)
            <div class="editor-field">
                @Html.PasswordFor(model => model.User.Password)
                @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.User.UserProfileId, "Profile")
        </div>
        <div class="editor-field">

            @Html.DropDownListFor(model => model.User.UserProfileId, Model.ProfileList)

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.User.CountryId, "Country")
        </div>
        <div class="editor-field">

            @Html.DropDownListFor(model => model.User.CountryId, Model.CountryList)

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.User.AccountId, "Account")
        </div>
        <div class="editor-field">

            @Html.DropDownListFor(model => model.User.AccountId, Model.AccountList)

        </div>
        <div class="editor-field">
            @Html.LabelFor(model => model.User.FirstName)
            <div class="editor-field">
                @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="editor-field">
            @Html.LabelFor(model => model.User.Remarks)
            <div class="editor-field">
                @Html.EditorFor(model => model.User.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="editor-field">
            @Html.LabelFor(model => model.User.MobileNo)
            <div class="editor-field">
                @Html.EditorFor(model => model.User.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>


            <div class="editor-field">
                @Html.LabelFor(model => model.User.EmailId)
                <div class="editor-field">
                    @Html.EditorFor(model => model.User.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.EmailId, "", new { @class = "text-danger" })
                </div>
            </div>






            <div class="form-toolbar">
                <input type="submit" value="Save" />
            </div>
    }
</section>

@section Scripts {
    <script>

    </script>
}
