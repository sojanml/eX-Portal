@model eX_Portal.ViewModel.UserViewModel
@using eX_Portal.Models;
@{
  ViewBag.Title = "Create";
}


@using (Html.BeginForm()) {
  @Html.AntiForgeryToken()

  <div class="form-horizontal">

    <h2>Account Details</h2>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.PasswordFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.PasswordFor(model => model.User.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.ConfirmPassword, "", new { @class = "text-danger" })
      </div>
    </div>

    <h2>Personal Details</h2>



    <div class="form-group">
      @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.User.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.EmailId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.EmailId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.MobileNo, "", new { @class = "text-danger" })
      </div>
    </div>


    <div class="form-group">
      @Html.LabelFor(model => model.User.OfficeNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.OfficeNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.OfficeNo, "", new { @class = "text-danger" })
      </div>
    </div>



    <div class="form-group">
      @Html.LabelFor(model => model.User.HomeNo, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.HomeNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.HomeNo, "", new { @class = "text-danger" })
      </div>
    </div>

    <h2>Settings</h2>

    <div class="form-group">
      @Html.LabelFor(model => model.User.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.User.AccountId, Model.AccountList)
        @Html.ValidationMessageFor(model => model.User.AccountId, "", new { @class = "text-danger" })        
      </div>
    </div>


    <div class="form-group">
      @Html.LabelFor(model => model.User.UserProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.User.UserProfileId, Model.ProfileList)
        @Html.ValidationMessageFor(model => model.User.UserProfileId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.User.CountryId, Model.CountryList)
        @Html.ValidationMessageFor(model => model.User.CountryId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        <div class="checkbox">
          @Html.EditorFor(model => model.User.IsActive)
          @Html.ValidationMessageFor(model => model.User.IsActive, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.User.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.User.Remarks, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.Remarks, "", new { @class = "text-danger" })
      </div>
    </div>


    <div class="form-toolbar">
      <input type="submit" value="Create" />
    </div>

  </div>
}


@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
