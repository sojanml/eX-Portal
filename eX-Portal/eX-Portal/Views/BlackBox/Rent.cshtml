@model eX_Portal.Models.BlackBoxTransaction
@using eX_Portal.exLogic
@{
    ViewBag.Title = "Rent Black Box";
    Layout = "~/Views/Shared/_eXPortal.cshtml";
    FlightReportFilter TheFilter = (FlightReportFilter)ViewBag.ReportFilter;
}


@*@Html.Action("DroneFilter", "BlackBox", new
{

    UAS = 0
})*@


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RentBlackBox", name = "RecBlackBox" }))
{
    <section class="general-form" id="loginForm">

        
        <input type="hidden" name="CreatedBy" value="@Model.CreatedBy" />
       
        <input type="hidden" name="ApprovalID" value="@Model.ApprovalID" />
        <input type="hidden" name="RentAmount" value="@Model.RentAmount "/>
        <div class="editor-label">
            Select User
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.DroneID, Util.GetDropDowntList("pilot"))
            @Html.ValidationMessageFor(model => model.DroneID)
        </div>


        <div class="editor-label">
            Select the UAS
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.DroneID, Util.GetDropDowntList("Drone"))
            @Html.ValidationMessageFor(model => model.DroneID)
        </div>
    

        <div class="editor-label">
            Select the Black box
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.BlackBoxID, Util.GetBB(), "Please Select...")
            @Html.ValidationMessageFor(model => model.BlackBoxID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.BBStatus)
        </div>
        <div class="editor-field">
            <div class="input-field">@Model.BBStatus</div>
            @Html.ValidationMessageFor(model => model.BBStatus)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Note, "Note")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>

        <div class="two-column-form-group">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RentStartDate)
                </div>


                <div class="editor-field">
                    @Html.TextBoxFor(model => model.RentStartDate, new { @class = "date-picker" })
                    @Html.ValidationMessageFor(model => model.RentStartDate)
                </div>
               
            </div>
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RentEndDate)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.RentEndDate, new { @class = "date-picker" })
                    @Html.ValidationMessageFor(model => model.RentEndDate)
                </div>
            </div>
        </div>
        <br />
        <h2>Rent Calculation</h2>
        <div id="msg" style="font-size:small">Please select blackbox,rent start date and end date to view rent calculations...</div>
        <div id="RentCalculation"></div>
        <div><br /></div>
        <div class="two-column-form-group">
          
            <div class="form-group">
                <div class="editor-label">
                   Amount to be paid
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Amount)
                    @Html.ValidationMessageFor(model => model.Amount)
                </div>
            </div>
           <br />
        </div>
       <br />
        <div class="form-toolbar">
            <input type="submit" id="btn-submit" value="Save" />
        </div>
    </section>
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    var FORM = document.forms['RecBlackBox'];
    var RentStartDate = null; 
    var RentEndDate = null;

    $(document).ready(function () {
        @*$('#ID').on("change", function () {
        var URL = '@Url.Action("BlackBoxInfo")' + "/" + $(this).val();
        $('#RecBlackBox :input').prop("disabled", true);
        $('#RentCalculation').slideUp();
        $.ajax({
          method: 'GET',
          url: URL
        }).done(ShowRentCalcualtion);
      })//$('#ID').on("change")*@                
        $('#RentStartDate').val(fmtDt(new Date()));
        $('#Amount').attr("disabled", "disabled");
        $('#RentEndDate').on("change", function () {
            RentStartDate =new Date( FORM['RentStartDate'].value);            
            RentEndDate = new Date($(this).val());
           // RentEndDate = FORM['RentEndDate'].value;
        var Days = Math.abs(RentEndDate - RentStartDate);
        var BBID = $('#BlackBoxID').val();
        var URL = '@Url.Action("BlackBoxInfo")' + "/" + BBID +
          '?StartDate=' + fmtDt(RentStartDate) +
          '&EndDate=' + fmtDt(RentEndDate);
        $('#RentCalculation').slideUp();
        $.ajax({
          method: 'GET',
          url: URL
        }).done(function (data) {
          $('#RentCalculation')
            .html(getCostDetail(data.Cost))
            .slideDown();
        });

      });//$('#RentEndDate').on("change")

    });//$(document).ready(function ()

    function ShowRentCalcualtion(data) {
      $('#RecBlackBox :input').prop("disabled", false);
      RentStartDate = toDate(data.Info.RentStartDate);
      RentEndDate = toDate(data.Info.RentEndDate);
      $('#RentStartDate').html(fmtDt(RentStartDate));
      FORM['RentEndDate'].value = fmtDt(RentEndDate);

      $('#RentCalculation')
        .html(getCostDetail(data.Cost))
        .slideDown();
    }

    function getCostDetail(Cost) {
      var HTML = '<table class="report" cellspacing="0">' +
      '<thead>\n' +
      '<tr>\n' +
      '<th>#</th>\n' +
      '<th>&nbsp;</th>\n' +
      '<th>Rent Type</th>\n' +
      '<th align="right">Qty</th>\n' +
      '<th align="right">Amount (AED)</th>\n' +
      '<th align="right">Total (AED)</th>\n' +
      '<th>&nbsp;</th>\n' +
      '</tr>\n' +
      '</thead>\n';

      for (var i = 0; i < Cost.length; i++) {

           if(Cost[i].isSelected )
          {
               var amt =parseInt( Cost[i].CalcuatedCost);
               var RentAmount =parseInt( Cost[i].RentAmount);
               //Amt.value = fmtMoney(Cost[i].CalcuatedCost);
           }

           FORM['Amount'].value = amt;
           FORM['RentAmount'].value = RentAmount;
          
        HTML +=
        '<tr class="' + (Cost[i].isSelected ? "selected" : "") + '">\n' +
        '<td>' +  (i+1) + '</td>\n' +
        '<td>' + (Cost[i].isSelected ? '<span class="icon" style="color:green">&#xf00c;</span>' : '&nbsp;') + '</td>\n' +
        '<td>' + Cost[i].RentType + '</td>\n' +
        '<td align="right">' + Cost[i].SectionDays + '</td>\n' +
        '<td align="right">' + fmtMoney(Cost[i].RentAmount) + '</td>\n' +
        '<td align="right">' + fmtMoney(Cost[i].CalcuatedCost) + '</td>\n' +
        '<td>&nbsp;</td>\n' +
        '</tr>\n';
      }
      HTML += '</table>\n';

      return HTML;
    }

    function toDate(value) {
      var d = /\/Date\((\d*)\)\//.exec(value);
      var theDate = (d) ? new Date(+d[1]) : value;
      return theDate;
    }

    function fmtDt(theDate) {
      
      var Month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
      var fmtDate =
        theDate.getDate() + '-' +
        Month[theDate.getMonth()] + '-' +
        theDate.getFullYear();
      return fmtDate;
    }

    function fmtMoney(theNumber){
      var n = theNumber;
          c = 2,
          d = ".",
          t = ",",
          s = n < 0 ? "-" : "",
          i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
          j = (j = i.length) > 3 ? j % 3 : 0;
      return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };


//function for uas dropdown

    $(document).ready(function () {

        var FORM = document.forms['DroneFilterForm'];
        $("#UASName").autocomplete({
            source: "@Url.Action("getUAS","Report",null)",
            minLength: 2,
        select: function (event, ui) {
            if (ui.item) {
                event.preventDefault();
                FORM['UAS'].value = ui.item.value;
                FORM['UASName'].value = ui.item.label;
            } else {
                FORM['UAS'].value = '0';
            }
        }
    });

    $("#UASName").on("blur", function (e) {
        if ($(this).val() == "") FORM['UAS'].value = '0';
    });

    })


    </script>
}