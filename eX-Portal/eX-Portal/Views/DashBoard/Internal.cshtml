@model eX_Portal.ViewModel.WeatherViewModel
@{
   
    Layout = "~/Views/Shared/_exPortal.cshtml";
}




@using (Html.BeginForm())
{
<h3>UAS Flight Chart</h3>
<a href="@Url.Action("myAction", "myController")">
    <div style="
   margin: 10px;
   padding: 10px;
   width: 500px;
   height: 300px;
   border: 1px solid black;">


        <canvas id="DsChart1" style="width:50px;height:250px"> </canvas>
    </div>
</a>
    <h3>UAS Last Flight</h3>
    <div style="
   margin: 10px;
   padding: 10px;
   width: 500px;
   height: 300px;
   border: 1px solid black;">

        <canvas id="myChart" style="width:50px;height:250px"> </canvas>
    </div>
    <h3>EnvironmentalData</h3>
    <div style="
   margin: 10px;
   padding: 10px;
   width: 500px;
   height: 300px;  
   border: 1px solid black;">
        <div>

            <table>
                <thead>ForeCast</thead>
                <tr>
                    <td>Date </td>
                    <td>Low</td>
                    <td>High</td>
                    <td>Status</td>
                </tr>


                @foreach (var item in Model.Forecast)
                {
                    <tr>
                        <td>@item.Date</td>
                        <td>@item.TempLow</td>
                        <td>@item.TempHigh</td>
                        <td>@item.status</td>
                    </tr>

                }
             </table>
            </div>
                <h6>Atmosphere</h6>
        <div>
        @Html.LabelFor(model => model.Humidity, "Humidity:")
                <label>@Html.DisplayFor(Model => Model.Humidity)%</label>
               
       
          
           
            @Html.LabelFor(model => model.Visibility, "Visibility:")
            <label>@Html.DisplayFor(Model => Model.Visibility)KM</label><br>
            @Html.LabelFor(model => model.Visibility, "Pressure:")
            <label>@Html.DisplayFor(Model => Model.Pressure)MB</label><br>
            @Html.LabelFor(model => model.Visibility, "Status:")
            <label>@Html.DisplayFor(Model => Model.PressureStatus)</label><br>
             
        </div>
        <div>
            <h6>Wind</h6>
            @Html.LabelFor(model => model.Chill, "Chill:")
            <label>@Html.DisplayFor(Model => Model.Chill) C</label><br>
            @Html.LabelFor(model => model.Direction, "Direction:")
            <label>@Html.DisplayFor(Model => Model.Direction) Degrees</label><br>
            @Html.LabelFor(model => model.Direction, "Speed:")
            <label>@Html.DisplayFor(Model => Model.Speed) MPH</label><br>
        </div>
        <div style="float:left">
            <h6>Astronomy</h6>
            @Html.LabelFor(model => model.Sunrise, "Sun Rise:")
            <label>@Html.DisplayFor(Model => Model.Sunrise) AM</label><br>
            @Html.LabelFor(model => model.Sunrise, "Sun Set:")
            <label>@Html.DisplayFor(Model => Model.Sunset) PM</label><br>
        </div>

        <div style="float:left">
            <h6>WeatherCondition</h6>
            @Html.LabelFor(model => model.ConditionDate, "Date:")
            <label>@Html.DisplayFor(Model => Model.ConditionDate) </label><br>
            @Html.LabelFor(model => model.ConditionTemperature, "Temperature:")
            <label>@Html.DisplayFor(Model => Model.ConditionTemperature) C</label><br>
            @Html.LabelFor(model => model.ConditionText, "Condition:")
            <label>@Html.DisplayFor(Model => Model.ConditionText)</label><br>

        </div>

        </div>
    <h3>Total Pilot Hours</h3>
    <div style="
   margin: 10px;
   padding: 10px;
   width: 500px;
   height: 300px;
   border: 1px solid black;">

        <canvas id="myChart" style="width:50px;height:250px"> </canvas>
    </div>

}

    @section scripts {

        <script type="text/javascript">
            window.onload =function () {
                      if (navigator.geolocation) {
                          navigator.geolocation.getCurrentPosition(showPosition, showError);
                      }
                      else { x.innerHTML = "Geolocation is not supported by this browser."; }
                  }
            function showPosition(position) {
                var latlondata = position.coords.latitude + "," + position.coords.longitude;
                var latlon = "Your Latitude Position is:=" + position.coords.latitude + "," + "Your Longitude Position is:=" + position.coords.longitude;
                alert(latlon)
                var img_url = "http://maps.googleapis.com/maps/api/staticmap?center="
          + latlondata + "&zoom=14&size=400x300&sensor=false";
                document.getElementById("mapholder").innerHTML = "<img src='" + img_url + "' />";
            }
            function showError(error) {
                if (error.code == 1) {
                    x.innerHTML = "User denied the request for Geolocation."
                }
                else if (err.code == 2) {
                    x.innerHTML = "Location information is unavailable."
                }
                else if (err.code == 3) {
                    x.innerHTML = "The request to get user location timed out."
                }
                else {
                    x.innerHTML = "An unknown error occurred."
                }
            }
           
        </script>

        <script src="~/Scripts/Chart.js" type="text/javascript"></script>

        <script type="text/javascript">
            var DashBoardChartDataURL = '@Url.Action("getCurrentFlightChartData","Dashboard")';

        </script>
        <script type="text/javascript" src="~/Scripts/DashBoardFlightChart.js"></script>
    }
