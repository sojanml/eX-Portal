
@model eX_Portal.ViewModel.DroneView

@{
  ViewBag.Title = "RPAS Registration";
  DateTime CommissionDate = Model.Drone.CommissionDate == null ? DateTime.Now : (DateTime)Model.Drone.CommissionDate;

}

<section class="general-form" >
  <div class="form-horizontal">
    <div style="width:60%; margin:auto">
      @using (Html.BeginForm()) {
        @Html.ValidationSummary(false)

        @Html.HiddenFor(model => model.Drone.DroneId)
        <div class="error" id="error-message" style="display:none;margin-bottom:20px;"></div>
        <div class="editor-label">
          @Html.LabelFor(model => model.Drone.AccountID, "Authority")
        </div>
        <div class="editor-field">
          @Html.DropDownListFor(model => model.Drone.AccountID, Model.OwnerList)
          @Html.ValidationMessageFor(model => model.Drone.AccountID)
        </div>

        <div class="editor-label">
          @Html.LabelFor(model => model.Drone.UavTypeId, "RPAS Type")
        </div>
        <div class="editor-field">
          @*Html.DropDownListFor(model => model.Drone.UavTypeId, Model.UAVTypeList)*@
          @Html.Action("UAVTypeList", new { UavTypeId = Model.Drone.UavTypeId })
          @Html.ValidationMessageFor(model => model.Drone.UavTypeId)
        </div>
        <div class="editor-label">
          @Html.LabelFor(model => model.Drone.ModelName, "Description")
        </div>

        <div class="editor-field">

          @Html.EditorFor(model => model.Drone.ModelName, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
          @Html.ValidationMessageFor(model => model.Drone.ModelName)
        </div>


        <div class="editor-label">
          @Html.LabelFor(model => model.Drone.ManufactureId, "Manufacturer")
        </div>
        <div class="editor-field">
          @Html.DropDownListFor(model => model.Drone.ManufactureId, Model.ManufactureList)
          @Html.ValidationMessageFor(model => model.Drone.ManufactureId)
        </div>
        <div class="editor-label">
          @Html.LabelFor(model => model.Drone.CommissionDate, "Commission Date")
        </div>
        <div class="editor-field">
          <input class="form-control date-picker text-box single-line"
                 data-val="true" data-val-date="The field CommissionDate must be a date."
                 id="Drone_CommissionDate" name="Drone.CommissionDate" type="datetime"
                 value="@CommissionDate.ToString("dd-MMM-yyyy")">
          @Html.ValidationMessageFor(model => model.Drone.CommissionDate)
        </div>

        if (eX_Portal.exLogic.User.hasAccess("DRONE.PARTS")) {
          <div class="editor-label">
            @Html.LabelFor(model => model.DroneParts.PartsName, "Parts")
          </div>
          <div class="editor-field">
            <input type="text" placeholder="Enter the Part name, Model or Supplier to Search" id="SelectItemsForParts" />
            @Html.Action("DroneParts", "Drone", new { ID = ViewBag.DroneId })
          </div>
        }//if(eX_Portal.exLogic.User.hasAccess("DRONE.PARTS"))

        @Html.Action("DroneImaging", "Drone", new { ID = ViewBag.DroneId, Actions = "Edit" })

        <div class="form-toolbar">
          <input type="submit" value="Save" />
        </div>

      }
    </div>
  </div>
</section>

@section header{
  <link href="~/Content/black-box.css" rel="stylesheet" />
}


@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  <script type="text/javascript">
      var UploadDroneURL = '@Url.Action("UploadDroneFile","Drone", new { ID = ViewBag.DroneID, DocumentType="Drone Image"})';
      var DeleteDroneURL = '@Url.Action("DeleteDroneFile", "Drone",new { ID = ViewBag.DroneID, DocumentType="Drone Image"})';
   // var DroneUploadURL = '@Url.Action("UploadFile", new { ID = Model.Drone.DroneId, FlightID = 0, DocumentType="UAS-Registration" })';
  </script>
 @*/ <script type="text/javascript" src="~/Scripts/drone.js"></script>*@
<script type="text/javascript" src="~/Scripts/DroneImaging.js"></script>

  <script>
    $(document).ready(function () {
      $('#SelectItemsForParts').autocomplete({
        source: "/AutoComplete/Parts/",
        minLength: 2,
        select: AutoCompleteSelect
      });

      $('#Table_SelectItemsForParts').on("click", "a.delete", function () {
        $(this).parent().parent().remove();
      })


      $('#Drone_ManufactureId').on('change', function () {

        if ($('#othermanu').prop('checked')) {

          $('#Name').val("");
          $('#divManuDetails').slideUp();
          $('#othermanu').attr('checked', false);
        }

      });
    });

    function AutoCompleteSelect(event, ui) {
      event.preventDefault();
      var ID = $(event.target).prop("id");
      $('#Table_' + ID).show();
      $('#' + ID).val('');
      var HTML = "<tr>" +
        "<td>" + ui.item.PartsName +
        '<input type="hidden" name="' + ID + '" value="' + ui.item.id + '">' +
        "</td>\n" +
        "<td>" + ui.item.Model + "</td>\n" +
        "<td>" + ui.item.Supplier + "</td>\n" +
        '<td><input style="width:40px;" type="text" name="' + ID + '_' + ui.item.id + '"></td>\n' +
        '<td><a class="delete" href="#">x</a></td>\n' +
        '</tr>';
      $('#Table_' + ID).append(HTML);
    }
  </script>
}